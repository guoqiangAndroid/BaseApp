apply plugin: 'com.android.application'


static def getCurrentTime(String format) {
    return new Date().format(format, TimeZone.getDefault())
}


android {
    compileSdk rootProject.ext.android.compileSdk

    defaultConfig {
        minSdk rootProject.ext.android.minSdk
        targetSdk rootProject.ext.android.targetSdk

        applicationId "com.yang.baseapp"
        versionCode 1000
        versionName "1.0.0.0"
        consumerProguardFiles "consumer-rules.pro"
    }
    compileSdk rootProject.ext.android.compileSdk

    lintOptions {
        disable 'GoogleAppIndexingWarning'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }



    signingConfigs {
        config{
            //加载资源
            Properties properties = new Properties()
            InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream() ;
            properties.load( inputStream )
            //读取字段
            def storePassword = properties.getProperty('storePassword')
            def keyAlias = properties.getProperty('keyAlias')
            def keyPassword = properties.getProperty('keyPassword')
            inputStream.close()
        }

        release {
            storeFile file("../keyfile.jks")
            storePassword "123456"
            keyAlias "123456"
            keyPassword "123456"
        }
        debug {
            storeFile file("../keyfile.jks")
            storePassword "123456"
            keyAlias "123456"
            keyPassword "123456"
        }
    }

    buildTypes {
        debug {
            //混淆开关
            minifyEnabled false
            signingConfig signingConfigs.debug
            //混淆文件,获取默认\sdk\tools\proguard\proguard-android.txt基础混淆配置信息，
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            if (buildType.name == 'debug') {
                outputFileName = "BaseApp_debug_android_${getCurrentTime('yyyyMMdd')}.apk"
            } else {
                outputFileName = "BaseApp_release_android_${getCurrentTime('yyyyMMddHHmmss')}.apk"
            }
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    buildToolsVersion '30.0.2'
}

dependencies {
    implementation project(':base')
    implementation project(':mvp')
}
